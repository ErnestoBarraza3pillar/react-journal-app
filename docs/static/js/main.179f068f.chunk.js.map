{"version":3,"sources":["types/Types.js","context/reducers/NotesReducer.js","context/reducers/UiReducer.js","context/store/Store.js","context/reducers/AuthReducer.js","firebase/FirebaseConfirg.js","context/actions/Ui.js","helpers/loadNotes.js","helpers/fileUpload.js","context/actions/Notes.js","context/actions/Auth.js","hooks/useForm.js","components/login/Index.js","components/register/Index.js","routers/AuthRouter.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","App.js","index.js"],"names":["TYPES","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","redurcers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","db","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getFirestore","googleAuthProvider","GoogleAuthProvider","setError","err","finishLoading","loadNotes","a","getDocs","collection","notesSnap","forEach","snapChildren","push","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","addNewNote","activeNote","setNotes","startSaveNote","dispatch","getState","url","noteToFirestore","noteRef","doc","updateDoc","refreshNote","Swal","fire","title","deleteNote","getAuth","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","userCredential","user","login","catch","error","message","logOut","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","LoginScreen","useDispatch","useSelector","formValues","hanldeInputChange","className","onSubmit","e","preventDefault","console","log","class","placeholder","autoComplete","onChange","disable","onClick","signInWithPopup","src","alt","to","RegisterScreen","username","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","currentUser","startRegisterLoginEmailPassword","AuthRouter","exact","path","component","JournalEntry","date","noteDate","moment","style","backgroundSize","backgroundImage","format","JournalEntries","key","Sidebar","signOut","newNote","Date","getTime","addDoc","NotesAppBar","display","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","deleteDoc","startDeleting","NothingSelected","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.179f068f.chunk.js","sourcesContent":["export const TYPES = {\r\n    LOGIN: '[Auth] Login',\r\n    LOGOUT: '[Auth] Logout',\r\n    UISETERROR: '[UI] Set Error',\r\n    UIREMOVEERROR: '[UI] Remove Error',\r\n    UISTARTLOADING: '[UI] Start loading',\r\n    UIFINISHLOADING: '[UI] Finish loading',\r\n    ADDNEWNOTE: '[Notes] New Note',\r\n    ACTIVENOTES: '[Notes] Set Active Note',\r\n    LOADNOTES: '[Notes] Load Note',\r\n    UPDATEDNOTES: '[Notes] Updated Note',\r\n    FILEURLNOTES: '[Notes] Updated Image Note',\r\n    DELETEDNOTES: '[Notes] Delete Note',\r\n    LOGOUTCLEANINGNOTES: '[Notes] LogOut Cleaning Note'\r\n}","import { TYPES } from \"../../types/Types\";\r\n\r\nconst initialState={\r\n    notes: [],\r\n    active: null\r\n}\r\nexport const notesReducer = (state = initialState, action) =>{ \r\n    switch (action.type) {\r\n        case TYPES.ACTIVENOTES:\r\n            return{\r\n                ...state,\r\n                active:{\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case TYPES.ADDNEWNOTE:\r\n            return{\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }  \r\n        case TYPES.LOADNOTES:\r\n            return{\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n        case TYPES.UPDATEDNOTES:\r\n            return{\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                         ? action.payload.note\r\n                         : note\r\n                )\r\n            }    \r\n        case TYPES.DELETEDNOTES:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes:state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n        case TYPES.LOGOUTCLEANINGNOTES:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { TYPES } from \"../../types/Types\";\r\n\r\nconst initialState = {\r\n    loading : false,\r\n    msgError: null\r\n}\r\nexport const uiReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case TYPES.UISETERROR:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case TYPES.UIREMOVEERROR:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case TYPES.UISTARTLOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case TYPES.UIFINISHLOADING:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }        \r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, combineReducers,applyMiddleware, compose } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from \"../reducers/AuthReducer\";\r\nimport { notesReducer } from \"../reducers/NotesReducer\";\r\nimport { uiReducer } from \"../reducers/UiReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst redurcers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\nexport const store = createStore(\r\n    redurcers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n","import { TYPES } from \"../../types/Types\";\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n    switch (action.type) {\r\n        case TYPES.LOGIN:\r\n            return {\r\n               // ...state,\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case TYPES.LOGOUT:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}","import 'firebase/firestore';\r\nimport 'firebase/auth';\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getFirestore, doc, setDoc  } from 'firebase/firestore';\r\nimport { GoogleAuthProvider } from 'firebase/auth';\r\n \r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDq3U8aace3K5SlA0PnoKBNnrSjdGOGo6s\",\r\n    authDomain: \"react-app-60437.firebaseapp.com\",\r\n    projectId: \"react-app-60437\",\r\n    storageBucket: \"react-app-60437.appspot.com\",\r\n    messagingSenderId: \"739636722212\",\r\n    appId: \"1:739636722212:web:1065c4b622c0061cac76b1\"\r\n  };\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n \r\nconst db = getFirestore();\r\n \r\nconst googleAuthProvider = new GoogleAuthProvider();\r\n \r\nexport{\r\n    db,\r\n    googleAuthProvider\r\n\r\n}\r\n","import { TYPES } from \"../../types/Types\"\r\n\r\nexport const setError = ( err ) =>({\r\n    type: TYPES.UISETERROR,\r\n    payload: err\r\n})\r\n\r\nexport const removeError = () =>({\r\n    type: TYPES.UIREMOVEERROR\r\n})\r\n\r\nexport const startLoading  = () =>({\r\n    type: TYPES.UISTARTLOADING\r\n})\r\n\r\nexport const finishLoading  = () =>({\r\n    type: TYPES.UIFINISHLOADING\r\n})","import { collection, getDocs } from \"firebase/firestore\";\r\nimport { db } from \"../firebase/FirebaseConfirg\";\r\n\r\n\r\nexport const loadNotes =async (uid) =>{\r\n    //collection(db,  `${ uid }/journal/notes`), newNote);\r\n    //const docRef =  doc(db, `${ uid }/journal/notes`,'notes');\r\n    const notesSnap = await getDocs(collection(db, `${ uid }/journal/notes`));\r\n    //const docSnap = await getDoc(docRef);\r\n\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapChildren =>{\r\n        notes.push({\r\n            id: snapChildren.id,\r\n            ...snapChildren.data()\r\n        })\r\n    });\r\n\r\n    return notes;\r\n    \r\n}","import React from 'react';\r\n\r\nexport const fileUpload = async ( file ) => {\r\n    const cloudUrl=\"https://api.cloudinary.com/v1_1/dorarfmvg/upload\";\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file',file);\r\n\r\n    try {\r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n};\r\n","import { db } from \"../../firebase/FirebaseConfirg\";\r\nimport { collection,addDoc,updateDoc,doc, deleteDoc  } from 'firebase/firestore';\r\nimport { TYPES } from \"../../types/Types\";\r\nimport { loadNotes } from \"../../helpers/loadNotes\";\r\nimport Swal from \"sweetalert2\"; \r\nimport { fileUpload } from \"../../helpers/fileUpload\";\r\n\r\nexport const startNewNote = () => {\r\n    //react-journal\r\n    return async ( dispatch, getState ) =>{\r\n        const { uid } = getState().auth;\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n        const doc = await addDoc(collection(db,  `${ uid }/journal/notes`), newNote);\r\n        \r\n\r\n        dispatch( activeNote( doc.id, newNote ) );\r\n        dispatch( addNewNote( doc.id, newNote ) );\r\n    }\r\n};\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type:TYPES.ADDNEWNOTE,\r\n    payload: {\r\n        id, \r\n        ...note\r\n    }\r\n})\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: TYPES.ACTIVENOTES,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n}) \r\n\r\nexport const setNotes = ( notes ) =>({\r\n    type: TYPES.LOADNOTES,\r\n    payload: notes\r\n})\r\n\r\nexport const startLoadingNotes =  ( uid ) =>{\r\n    return async (dispatch)=>{\r\n        const notes = await loadNotes( uid );\r\n        dispatch ( setNotes( notes ) );\r\n    }\r\n}\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async ( dispatch, getState )=>{\r\n        const { uid } = getState().auth;\r\n\r\n        if ( !note.url ) {\r\n            delete note.url;\r\n        }\r\n        \r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n        const noteRef = doc(db, `${ uid }/journal/notes`, `${ note.id }`);\r\n\r\n        await updateDoc(noteRef, noteToFirestore);\r\n        \r\n        dispatch ( refreshNote( note.id, noteToFirestore ));\r\n\r\n        Swal.fire('Saved',note.title,'success');\r\n    }\r\n}\r\n\r\nexport const refreshNote = ( id, note ) =>({\r\n    type: TYPES.UPDATEDNOTES,\r\n    payload: {\r\n        id, \r\n        note:{\r\n            id,\r\n            ...note\r\n        }\r\n\r\n    }\r\n})\r\n\r\nexport const startUploading = ( file ) =>{\r\n    return async ( dispatch, getState )=>{\r\n        const { active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title:' Uploading... ',\r\n            text: 'Please Wait ',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,  \r\n            willOpen: () => {\r\n                Swal.showLoading()\r\n            }\r\n        })\r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote ( activeNote ) )\r\n        \r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async (dispatch,getState) => {\r\n        const uid = getState().auth.uid;\r\n\r\n        try {\r\n           \r\n            await deleteDoc(doc(db, `${ uid }/journal/notes`, `${ id }`));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n\r\n        dispatch( deleteNote( id ) );\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) =>({\r\n    type: TYPES.DELETEDNOTES,\r\n    payload: id\r\n})\r\n\r\n\r\nexport const noteLogOut = () =>({\r\n    type: TYPES.LOGOUTCLEANINGNOTES\r\n})\r\n","import { googleAuthProvider } from \"../../firebase/FirebaseConfirg\";\r\nimport { getAuth, signInWithPopup,createUserWithEmailAndPassword,updateProfile,signInWithEmailAndPassword,signOut } from 'firebase/auth';\r\nimport { TYPES } from \"../../types/Types\"\r\nimport { finishLoading, startLoading } from \"./Ui\";\r\nimport Swal from \"sweetalert2\"; \r\nimport { noteLogOut } from \"./Notes\";\r\nconst auth = getAuth();\r\n\r\nexport const startLoginEmailPassword = (email,password) =>{\r\n    return (dispatch) =>{\r\n        dispatch( startLoading() );\r\n        signInWithEmailAndPassword(auth,email,password)\r\n            .then((userCredential) => {\r\n                const user = userCredential.user;\r\n                dispatch( login (user.uid,user.displayName))\r\n                dispatch( finishLoading() );\r\n            })\r\n            .catch(error => {\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Error',error.message,'error')\r\n            });\r\n    }\r\n}\r\n\r\nexport const startRegisterLoginEmailPassword =(email,password,username) =>{\r\n    return ( dispatch) =>{\r\n        //const auth = getAuth();\r\n        createUserWithEmailAndPassword(auth, email, password)\r\n        .then(async(userCredential) => {\r\n            // Signed in\r\n            const user = userCredential.user;\r\n            await updateProfile(auth.currentUser, {\r\n                displayName: username\r\n                    })\r\n                        .then(() => {\r\n                    })\r\n                        .catch((error) => {\r\n                            Swal.fire('Error',error.message,'error')\r\n                    });\r\n            dispatch(\r\n               login(user.uid,user.displayName)\r\n            )\r\n            \r\n        })\r\n        .catch((error) => {\r\n            Swal.fire('Error',error.message,'error')\r\n        });\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) =>{\r\n        //const auth = getAuth();\r\n        signInWithPopup(auth, googleAuthProvider )\r\n            .then( ({user}) => {\r\n                dispatch(\r\n                    login( user.uid, user.displayName)\r\n                )\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message)\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n        type: TYPES.LOGIN,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n})\r\n\r\nexport const startLogOut = () => {\r\n    return async (dispatch) =>{\r\n        //const auth = getAuth();\r\n        await signOut(auth);\r\n        dispatch( logOut() );\r\n        dispatch( noteLogOut());\r\n    }\r\n}\r\n\r\nexport const logOut = ()=>({\r\n    type: TYPES.LOGOUT\r\n})","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { startGoogleLogin, startLoginEmailPassword } from '../../context/actions/Auth'\nimport { useForm } from '../../hooks/useForm';\n\nexport const LoginScreen = () => {\n\nconst dispatch = useDispatch();\nconst {loading} = useSelector( state => state.ui )\nconst [ formValues, hanldeInputChange] = useForm({\n    email: 'test@gmail.com',\n    password: '123456'\n});\n\nconst handleLogin = (e) =>{\n    e.preventDefault();\n    console.log(email,password)\n    dispatch(startLoginEmailPassword(email, password))\n}\nconst { email, password} = formValues;\n\nconst handleGoodleLogin = () => {\n    dispatch ( startGoogleLogin() );\n}\n    return (\n        <>\n            <h3 className=\"auth__title\">Login</h3>\n\n            <form \n                onSubmit={handleLogin}\n                class=\"animate__animated animate__fadeIn animate__faster\"\n            >\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={hanldeInputChange} \n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={hanldeInputChange} \n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block\"\n                    disable={ loading ? 1 : 0 }\n                >\n                    Login\n                </button>\n\n                \n                <div className=\"auth__social-networks\">\n                    <p>Login with social networks</p>\n\n                    <div \n                        className=\"google-btn\"\n                        onClick= {handleGoodleLogin}\n                    >\n                        <div className=\"google-icon-wrapper\">\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\n                        </div>\n                        <p className=\"btn-text\">\n                            <b>Sign in with google</b>\n                        </p>\n                    </div>\n                </div>\n\n                <Link \n                    to=\"/auth/register\"\n                    className=\"link\"\n                >\n                    Create new account    \n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useForm } from '../../hooks/useForm';\nimport  validator  from \"validator\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { removeError, setError } from '../../context/actions/Ui';\nimport { startRegisterLoginEmailPassword } from '../../context/actions/Auth';\n\nexport const RegisterScreen = () => {\n\n    const dispatch = useDispatch();\n    const {msgError} = useSelector( state => state.ui )\n    const [ formValues, hanldeInputChange] = useForm({\n        username: 'Ernesto',\n        email: 'ernestobarraza2014@gmail.com',\n        password: '123456',\n        password2: '123456'\n    });\n\n    const { username, email, password, password2} = formValues;\n\n    const handleRegister = (e) =>{\n        e.preventDefault();\n        if (isFormValid()) {\n            dispatch( startRegisterLoginEmailPassword (email,password,username))\n        }\n\n        console.log(username,email,password,password2)\n       \n    }\n\n    const isFormValid = () =>{\n        if (username.trim().length=== 0) {\n            dispatch( setError ('Name is Required') )\n            return false;\n        }else if ( !validator.isEmail( email )) {\n            dispatch( setError ('Email is not valid') )\n            return false;\n        }else if (password !== password2 || password.length < 5) {\n            dispatch( setError ('Password is not valid') )\n            return false;\n        } \n        dispatch( removeError());\n        return true;\n    }\n    \n\n\n    return (\n        <>\n            <h3 className=\"auth__title\">Register</h3>\n\n            <form \n                onSubmit={handleRegister}\n                class=\"animate__animated animate__fadeIn animate__faster\"\n            >\n                {\n                    msgError &&\n                    (\n                        <div className=\"auth__alert-error\">\n                            {msgError}\n                        </div>\n                    )\n                }\n                <input \n                    type=\"text\"\n                    placeholder=\"Name\"\n                    name=\"username\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={username}\n                    onChange={hanldeInputChange} \n                />\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                    className=\"auth__input\"\n                    autoComplete=\"off\"\n                    value={email}\n                    onChange={hanldeInputChange} \n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    className=\"auth__input\"\n                    value={password}\n                    onChange={hanldeInputChange} \n                />\n\n                <input \n                    type=\"password\"\n                    placeholder=\"Confirm password\"\n                    name=\"password2\"\n                    className=\"auth__input\"\n                    value={password2}\n                    onChange={hanldeInputChange} \n                />\n\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mb-5\"\n                >\n                    Register\n                </button>\n\n               \n\n                <Link \n                    to=\"/auth/login\"\n                    className=\"link\"\n                >\n                    Already registered?\n                </Link>\n\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport { LoginScreen } from '../components/login/Index';\nimport { RegisterScreen } from '../components/register/Index';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"auth__main\">\n            <div className=\"auth__box-container\">\n                <Switch>\n                    <Route \n                        exact\n                        path=\"/auth/login\"\n                        component={ LoginScreen }\n                    />\n\n                    <Route \n                        exact\n                        path=\"/auth/register\"\n                        component={ RegisterScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport moment  from \"moment\";\nimport { activeNote } from '../../context/actions/Notes';\nimport { useDispatch } from 'react-redux';\n\nexport const JournalEntry = ({id, date, title, body, url}) => {\n\nconst noteDate = moment(date);\nconst dispatch = useDispatch();\n\nconst handleEntryClick = () =>{\n    dispatch(\n        activeNote( id,{\n             date, title, body, url \n        } )\n    )\n}\n    return (\n        <div\n         className=\"journal__entry pointer animate__animated animate__fadeIn animate__faster\"\n         onClick={ handleEntryClick }\n        >\n            {\n                url &&\n                <div \n                    className=\"journal__entry-picture\"\n                    style={{\n                        backgroundSize: 'cover',\n                        backgroundImage: `url(${ url })`\n                    }}\n                ></div>\n            }\n\n            <div className=\"journal__entry-body\">\n                <p className=\"journal__entry-title\">\n                    { title}\n                </p>\n                <p className=\"journal__entry-content\">\n                    { body }\n                </p>\n            </div>\n\n            <div className=\"journal__entry-date-box\">\n                <span>{ noteDate.format('dddd') }</span>\n                <h4>{ noteDate.format('Do') }</h4>\n            </div>\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { JournalEntry } from './JournalEntry';\n\nexport const JournalEntries = () => {\n\n    const { notes } = useSelector( state => state.notes );\n    \n\n    return (\n        <div \n            className=\"journal__entries\"\n        >\n            \n            {\n                notes.map( note => (\n                    <JournalEntry \n                        key={ note.id }\n                        { ...note }\n                    />\n                ))\n            }\n\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogOut } from '../../context/actions/Auth';\nimport { startNewNote } from '../../context/actions/Notes';\nimport { JournalEntries } from './JournalEntries'\n\nexport const Sidebar = () => {\n    const { name } = useSelector( state => state.auth )\n    const dispatch = useDispatch();\n\n    const handleLogOut = () =>{\n        dispatch( startLogOut());\n    }\n\n    const handleAddNew = () =>{\n        dispatch( startNewNote ());\n    }\n\n    return (\n        <aside className=\"journal__sidebar\">\n            \n            <div className=\"journal__sidebar-navbar\">\n                <h3 className=\"mt-5\">\n                    <i className=\"far fa-moon\"></i>\n                    <span> { name } </span>\n                </h3>\n\n                <button \n                    className=\"btn\"\n                    onClick={handleLogOut}\n                >\n                    Logout\n                </button>\n            </div>\n\n            <div \n                className=\"journal__new-entry\"\n                onClick={ handleAddNew }\n            >\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\n                <p className=\"mt-5\">\n                    New entry\n                </p>\n            </div>\n\n            <JournalEntries />    \n\n        </aside>\n    )\n}\n","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startSaveNote, startUploading } from '../../context/actions/Notes';\n\nexport const NotesAppBar = () => {\n\n    const dispatch = useDispatch();\n    const { active } = useSelector( state => state.notes )\n    const handleSave = () =>{\n        dispatch( startSaveNote( active ));\n    } \n\n    const handlePictureClick = () =>{\n        document.querySelector('#fileSelector').click();\n    } \n\n    const handleFileChange = (e) =>{\n      const file = e.target.files[0];\n\n      if ( file ) {\n          dispatch( startUploading( file ) );\n      }\n\n    } \n\n    return (\n        <div className=\"notes__appbar\">\n            <span>30 de agosto 2021</span>\n\n            <input\n                id=\"fileSelector\"\n                type=\"file\"\n                name=\"file\"\n                style={{display:'none'}}\n                onChange={ handleFileChange }\n            />\n\n            <div>\n                <button \n                    className=\"btn\"\n                    onClick={ handlePictureClick }\n                >\n                    Picture\n                </button>\n\n                <button \n                    className=\"btn\"\n                    onClick={ handleSave }\n                >\n                    Save\n                </button>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NotesAppBar } from './NotesAppBar'\nimport { useForm } from \"../../hooks/useForm\";\nimport { activeNote, startDeleting } from \"../../context/actions/Notes\";\n\nexport const NoteScreen = () => {\n\n    const { active:note } = useSelector( state => state.notes);\n    const [ formValues, handleInputChange, reset ] = useForm( note );\n    const { body, title, id } = formValues;\n    const activeId = useRef( note.id )\n    const dispatch = useDispatch();\n\n    //Change the active note on screen\n    useEffect(() =>{\n        if (note.id !== activeId.current){\n            reset ( note )\n            activeId.current=note.id;\n        }\n    },[note, reset])\n\n    //update the state note synchronous\n    useEffect(() =>{\n        dispatch( activeNote( formValues.id, { ...formValues}));\n\n    },[formValues, dispatch])\n\n    const hanldeDelete = ()=>{\n        dispatch( startDeleting( id ));\n    }\n    return (\n        <div className=\"notes__main-content\">\n            \n            <NotesAppBar />\n\n            <div className=\"notes__content\">\n\n                <input \n                    type=\"text\"\n                    placeholder=\"Some awesome title\"\n                    className=\"notes__title-input\"\n                    autoComplete=\"off\"\n                    value={ title }\n                    name=\"title\"\n                    onChange={ handleInputChange }\n                />\n\n                <textarea\n                    placeholder=\"What happened today\"\n                    className=\"notes__textarea\"\n                    value={ body }\n                    name=\"body\"\n                    onChange={ handleInputChange }\n                ></textarea>\n                {\n                    (note.url)\n                    && (\n                        <div className=\"notes__image\">\n                            <img \n                                src={note.url}\n                                alt=\"imagen\"\n                            />\n                        </div>\n                    )\n                }\n\n\n            </div>\n            <button\n                className=\"btn btn-danger\"\n                onClick={ hanldeDelete }\n            >\n                Delete\n            </button>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className=\"nothing__main-content\">\n            <p>\n                Select something\n                <br />\n                Create an entry!\n            </p>\n\n            <i className=\"far fa-star fa-4x mt-5\"></i>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport { Sidebar } from './Sidebar';\nimport { NoteScreen } from '../notes/NoteScreen';\nimport { useSelector } from 'react-redux';\nimport { NothingSelected } from './NothingSelected'\n// import { NothingSelected } from './NothingSelected';\n\n\nexport const JournalScreen = () => {\n\nconst { active } = useSelector(state => state.notes);\n\n    return (\n        <div \n            className=\"journal__main-content animate__animated animate__fadeIn animate__faster\"\n        >\n            \n            <Sidebar />\n\n\n            <main>\n                {\n                    ( active )\n                        ? ( <NoteScreen /> )\n                        : ( <NothingSelected /> )\n                }\n            </main>\n\n\n        </div>\n    )\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect\n  } from 'react-router-dom';\n\nimport { AuthRouter } from './AuthRouter';\nimport { JournalScreen } from '../components/journal/JournalScreen';\nimport { getAuth } from 'firebase/auth';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../context/actions/Auth';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\nimport { startLoadingNotes } from '../context/actions/Notes';\n\n\n\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n\n    const [ checking, setChecking ] = useState(true);\n    const [ isLoggedIn, setIsLoggedIn ] = useState(false); \n\n    useEffect(()=>{\n        const auth = getAuth();\n        auth.onAuthStateChanged((user)=>{\n\n            if (user?.uid) {\n                dispatch( login(user.uid,user.displayName) );\n                setIsLoggedIn( true );\n                dispatch ( startLoadingNotes( user.uid ) );\n                \n            }else{\n                setIsLoggedIn( false );\n            }\n\n            setChecking(false);\n        })\n    },[ dispatch, setChecking, setIsLoggedIn ])\n\n    if ( checking ) {\n        return (\n            <h1>Loading...</h1>\n        )\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute \n                        path=\"/auth\"\n                        isAuthenticated={ isLoggedIn }\n                        component={ AuthRouter }\n                    />\n\n                    <PrivateRoute \n                        exact\n                        path=\"/\"\n                        isAuthenticated={isLoggedIn}\n                        component={ JournalScreen }\n                    />\n\n                    <Redirect to=\"/auth/login\" />\n\n\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport { Provider } from \"react-redux\";\nimport { store } from './context/store/Store';\n\nimport { AppRouter } from './routers/AppRouter';\n\nexport const App = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider>\n        \n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { App } from './App';\nimport './styles/styles.scss'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}